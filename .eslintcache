[{"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/reportWebVitals.js":"1","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/index.tsx":"2","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/store/store.ts":"3","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/authSlice.ts":"4","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/App.tsx":"5","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Auth.tsx":"6","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/components/NonAuthLayout.tsx":"7","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/routes/index.tsx":"8","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/components/Layout/index.tsx":"9","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/routes/route.js":"10","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/helpers/firebase.helper.tsx":"11","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Login.tsx":"12","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/index.tsx":"13","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/async/authActions.ts":"14","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Signup.tsx":"15","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Reset.tsx":"16","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/dashboardSlice.ts":"17","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/async/dashboardAction.ts":"18","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/CarouselItem.tsx":"19","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/services/audio/audio.instance.ts":"20","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/services/audio/audio.service.ts":"21","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Player/index.tsx":"22"},{"size":362,"mtime":1608738680000,"results":"23","hashOfConfig":"24"},{"size":571,"mtime":1624961477148,"results":"25","hashOfConfig":"24"},{"size":488,"mtime":1625036858979,"results":"26","hashOfConfig":"24"},{"size":873,"mtime":1625851604798,"results":"27","hashOfConfig":"24"},{"size":2086,"mtime":1625836962526,"results":"28","hashOfConfig":"24"},{"size":589,"mtime":1624622354309,"results":"29","hashOfConfig":"30"},{"size":903,"mtime":1624987855998,"results":"31","hashOfConfig":"24"},{"size":702,"mtime":1626102660043,"results":"32","hashOfConfig":"24"},{"size":953,"mtime":1625902599438,"results":"33","hashOfConfig":"24"},{"size":653,"mtime":1624633735786,"results":"34","hashOfConfig":"24"},{"size":6383,"mtime":1625906778988,"results":"35","hashOfConfig":"24"},{"size":3308,"mtime":1625996678299,"results":"36","hashOfConfig":"24"},{"size":3757,"mtime":1626102860703,"results":"37","hashOfConfig":"24"},{"size":1651,"mtime":1625851674603,"results":"38","hashOfConfig":"24"},{"size":5270,"mtime":1625842757829,"results":"39","hashOfConfig":"24"},{"size":2577,"mtime":1625852264555,"results":"40","hashOfConfig":"24"},{"size":399,"mtime":1625036868092,"results":"41","hashOfConfig":"24"},{"size":1209,"mtime":1625039903259,"results":"42","hashOfConfig":"24"},{"size":1684,"mtime":1626012686830,"results":"43","hashOfConfig":"24"},{"size":373,"mtime":1626120832307,"results":"44","hashOfConfig":"24"},{"size":3913,"mtime":1626122739548,"results":"45","hashOfConfig":"24"},{"size":1675,"mtime":1626122690878,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1umz260",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1qgvvq3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/reportWebVitals.js",[],["103","104"],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/index.tsx",[],["105","106"],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/store/store.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/authSlice.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/App.tsx",["107","108","109"],"import React, { useEffect } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { authProtectedRoutes, publicRoutes } from './routes'\nimport './App.scss'\n// import Auth from './features/auth/Auth'\nimport AppRoute from './routes/route'\nimport NonAuthLayout from './components/NonAuthLayout'\nimport Layout from './components/Layout'\nimport { initFirebaseBackend, getFirebaseBackend } from './helpers/firebase.helper'\nimport { loginSuccess } from './features/auth/authSlice'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBG8znM0AFK8v3yMScWoiwPzPWgCcA-LnY\",\n  authDomain: \"diforb-react-1ec55.firebaseapp.com\",\n  projectId: \"diforb-react-1ec55\",\n  storageBucket: \"diforb-react-1ec55.appspot.com\",\n  messagingSenderId: \"998910724069\",\n  appId: \"1:998910724069:web:6b1e390b94b84921fe910c\",\n  measurementId: \"G-FK6LNR554Z\"\n}\n\nconst firebaseBackend = initFirebaseBackend(firebaseConfig)\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (firebaseBackend?.getAuthenticatedUser() !== null) {\n      dispatch(loginSuccess())\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          \n          {\n            publicRoutes.map((route, idx) => (\n              <AppRoute\n                path = { route.path }\n                layout = { NonAuthLayout }\n                component = { route.component }\n                key = { idx }\n                isAuthProtected = { false }\n              />\n            ))\n          }\n\n          { \n            authProtectedRoutes.map((route, idx) => (\n              <AppRoute\n                path = { route.path }\n                layout = { Layout }\n                component = { route.component }\n                key = { idx }\n                isAuthProtected = { true }\n                exact\n              />\n            )) \n          }\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, null)(App)\n","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Auth.tsx",[],["110","111"],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/components/NonAuthLayout.tsx",["112"],"import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { withRouter, RouteComponentProps, useHistory } from 'react-router-dom'\nimport styles from './NonAuthLayout.module.scss'\nimport { getFirebaseBackend } from '../helpers/firebase.helper'\n\ninterface PropsType extends RouteComponentProps  {\n  children: JSX.Element,\n}\n\nconst NonAuthLayout = (props: PropsType): JSX.Element => {\n  const history = useHistory()\n  const isLogged = useSelector((state: { auth: {isLogged: boolean} }) => state.auth.isLogged)\n  const firebaseBackend = getFirebaseBackend()\n\n  useEffect(() => {\n    if (firebaseBackend?.getAuthenticatedUser() !== null) {\n      history.push('/dashboard')\n    }\n  }, [ isLogged ])\n\n  return (\n    <div className = { styles.wrapper }>\n      <div className = { styles.content }>{ props.children }</div>\n    </div>\n  )\n}\n\nexport default withRouter(NonAuthLayout)","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/routes/index.tsx",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/components/Layout/index.tsx",["113","114","115","116"],"import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps, useHistory } from 'react-router-dom'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { onLogout } from '../../async/authActions'\nimport { getFirebaseBackend } from '../../helpers/firebase.helper'\n\n\ninterface PropsType extends RouteComponentProps {\n  children: JSX.Element\n}\n\nconst Layout = (props: PropsType): JSX.Element => {\n  const history = useHistory()\n  const isLogged = useSelector((state: { auth: { isLogged: boolean } }) => state.auth.isLogged)\n  const firebaseBackend = getFirebaseBackend()\n\n  useEffect(() => {\n    console.log('use Effect', isLogged)\n    if (firebaseBackend?.getAuthenticatedUser() === null) {\n      history.push('/login')\n    }\n  }, [ isLogged ])\n  \n  return (\n    <React.Fragment>\n      {/* <div>Preload!!!</div> */}\n      <div>{ props.children }</div>\n    </React.Fragment>\n  )\n}\n\n\n\nexport default withRouter(Layout)","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/routes/route.js",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/helpers/firebase.helper.tsx",["117","118"],"import firebase from 'firebase/app'\n\n// Add the Firebase products that you want to use\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport { UserInterface, FirebaseConfig} from './firebase.interface'\n\n\ntype SocialType = 'google' | 'facebook'\ntype ProviderType = firebase.auth.GoogleAuthProvider_Instance | firebase.auth.FacebookAuthProvider_Instance\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig: FirebaseConfig) {\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig)\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // localStorage.setItem('authUser', JSON.stringify(user))\n          this.setLoggeedInUser(user)\n        } else {\n          // localStorage.removeItem('authUser')\n          this.removeLoggeedInUser()\n        }\n      })\n      /////////////////////////////////////////////\n      const firestore = firebase.firestore()\n      // firestore\n      //     .collection('libraries')\n      //     .get()\n      //     .then(v => {\n      //       console.log('Total users: ', v.size)\n\n      //       v.forEach(documentSnapshot => {\n      //         console.log('Libraries ID: ', documentSnapshot.id, documentSnapshot.data());\n      //       })\n      //     })\n      /////////////////////////////////////////////////\n      // firestore\n      //   .collection('libraries')\n      //   .doc('L4QVEIkmDDboPX0gUY3K')\n      //   .onSnapshot(docSnapshot => {\n      //     console.log(docSnapshot.data())\n      //   })\n      \n    }\n  }\n\n  /**\n   * @name registerUser Registers the user with given details\n   */\n  registerUser = (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            console.log(user)\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * @name editProfileAPI Registers the user with given details\n   */\n  editProfileAPI = (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            console.log(user)\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * @name loginUser Login user with given details\n   */\n  loginUser = (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            console.log(user)\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * @name forgetPassword forget Password user with given details\n   */\n  forgetPassword = (email: string) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .sendPasswordResetEmail(email, {\n          url:\n            window.location.protocol + '//' + window.location.host + '/login',\n        })\n        .then(() => {\n          resolve(true)\n        })\n        .catch(error => {\n          reject(this._handleError(error))\n        })\n    })\n  }\n\n  /**\n   * @name logout Logout the user\n   */\n  logout = (): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          resolve(true)\n        })\n        .catch(error => {\n          reject(this._handleError(error))\n        })\n    })\n  }\n\n  /**\n   * @name socialLoginUser Social Login user with given details\n   */\n  socialLoginUser = (type: SocialType): Promise<any> => {\n    let provider: ProviderType | null = null\n\n    if (type === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider()\n      provider.addScope('profile')\n      provider.addScope('email')\n    } else if (type === 'facebook') {\n      provider = new firebase.auth.FacebookAuthProvider()\n      provider.addScope('user_birthday')\n    } else {\n      return Promise.reject('Что то с провайдером не так')\n    }\n\n    return firebase.auth().signInWithPopup(provider)\n  }\n\n  addNewUserToFirestore = (user: any) => {\n    const collection = firebase.firestore().collection('users')\n    const { profile } = user.additionalUserInfo\n    const details = {\n      firstName: profile.given_name ? profile.given_name : profile.first_name,\n      lastName: profile.family_name ? profile.family_name : profile.last_name,\n      fullName: profile.name,\n      email: profile.email,\n      picture: profile.picture,\n      createdDtm: firebase.firestore.FieldValue.serverTimestamp(),\n      lastLoginTime: firebase.firestore.FieldValue.serverTimestamp()\n    }\n    collection.doc(firebase.auth().currentUser?.uid).set(details)\n    return { user, details }\n  }\n\n  setLoggeedInUser = (user: firebase.User) => {\n    localStorage.setItem('authUser', JSON.stringify(user))\n  }\n\n  removeLoggeedInUser = () => {\n    localStorage.removeItem('authUser')\n  }\n\n  /**\n   * Returns the authenticated user\n   */\n  getAuthenticatedUser = (): firebase.User | null => {\n    if (!localStorage.getItem('authUser')) return null\n    return JSON.parse(localStorage.getItem('authUser') || '')\n  }\n\n  /**\n   * Handle the error\n   * @param {*} error\n   */\n  _handleError(error: { message: string }) {\n    // var errorCode = error.code;\n    var errorMessage = error.message\n    return errorMessage\n  }\n}\n\nlet _fireBaseBackend: FirebaseAuthBackend | null = null\n\n/**\n * Initilize the backend\n * @param {*} config\n */\nconst initFirebaseBackend = (config: FirebaseConfig): FirebaseAuthBackend => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config)\n  }\n  return _fireBaseBackend\n}\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend\n}\n\nconst getFirebaseStorage = () => {\n  return firebase.storage()\n}\n\nconst getFirebaseFirestore = () => {\n  return firebase.firestore()\n}\n\nexport { initFirebaseBackend, getFirebaseBackend, getFirebaseStorage, getFirebaseFirestore }","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Login.tsx",["119","120"],"import React, { useState, useRef }      from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { withRouter, Link }     from 'react-router-dom'\nimport { Password }             from 'primereact/password'\nimport { InputText }            from 'primereact/inputtext'\nimport { Button }               from 'primereact/button'\nimport { onLogin, onLoginWithSocial } from '../../async/authActions'\nimport { resetError }           from './authSlice'\nimport styles                   from './Auth.module.scss'\n\nimport { getFirebaseBackend } from '../../helpers/firebase.helper'\n\nconst Login = (props: any): JSX.Element => {\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const dispatch = useDispatch()\n  const error = useSelector((state: { auth: { error: string } }) => state.auth.error)\n  const emailRef = useRef(null)\n  const passwordRef = useRef(null)\n\n  return (\n    <div className = { styles.wrapper + ' card' }>\n      <h1 className = 'icon-logo'></h1>\n      <h2>Log In</h2>\n      <div className = 'p-grid p-fluid'>\n        <div className = 'p-col-12 p-md-12'>\n          <div className = { styles.group }>\n            <label>Email</label>\n            <div className='p-inputgroup'>\n              <InputText \n                ref = { emailRef }\n                className = { styles.input } placeholder = 'Type email adress' \n                onChange={(e) => setEmail(e.target.value)}\n                onFocus = {(e) => error && dispatch(resetError())}\n              />\n            </div>\n          </div>\n          <div className = { styles.group }>\n            <label>Password</label>\n            <div className='p-inputgroup'>\n              <Password  \n                ref = { passwordRef }\n                className = { styles.input }\n                value = { password }  placeholder = 'Password' \n                onChange={(e) => setPassword(e.target.value)} \n                onFocus = {(e) => error && dispatch(resetError())}\n              />\n            </div>\n          </div>\n          <p className = { styles.error }>{ error }</p>\n          <Button \n            className = {styles.button} label = 'Login' loading = {false} icon = 'icon-login'\n            onClick = { () => dispatch(onLogin(email, password)) }\n          />\n          <Button \n            className = {styles.button} label = 'Login with Google' loading = {false} icon = 'icon-google'\n            onClick = { () => dispatch(onLoginWithSocial('google')) }\n          />\n          <Button \n            className = {styles.button} label = 'Login with Facebook' loading = {false} icon = 'icon-facebook'\n            onClick = { () => dispatch(onLoginWithSocial('facebook')) }\n          />\n          <div className = { styles.links }>\n            <Link to = '/signup'>\n              <Button label = 'Sign Up' className = { styles.link + ' p-button-link' } />\n            </Link>\n            <Link to = '/reset'>\n              <Button label = 'Forget password' className = { styles.link + ' p-button-link' } />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: { auth: { isLogged: boolean } }) => {\n  return {\n    isLogged: state.auth.isLogged\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Login))\n","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/index.tsx",["121"],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/async/authActions.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Signup.tsx",["122"],"import React, { useState, useRef }  from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { withRouter, Link  }        from 'react-router-dom'\nimport { InputText }                from 'primereact/inputtext'\nimport { Password }                 from 'primereact/password'\nimport { Button }                   from 'primereact/button'\nimport { onSignUp }                 from '../../async/authActions'\nimport { resetError }               from './authSlice'\nimport styles                       from './Auth.module.scss'\n\nconst Signup = (): JSX.Element => {\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const dispatch = useDispatch()\n  const error = useSelector((state: { auth: { error: string } }) => state.auth.error)\n  const emailRef = useRef(null)\n  const passwordRef = useRef(null)\n\n  return (\n    <div className = { styles.wrapper + ' card' }>\n      <h1 className = 'icon-logo'></h1>\n      <h2>Log In</h2>\n      <div className = 'p-grid p-fluid'>\n          <div className = 'p-col-12 p-md-12'>\n              <div className = { styles.group }>\n                <label>Email</label>\n                <div className='p-inputgroup'>\n                  <InputText \n                    ref = { emailRef }\n                    className = { styles.input } placeholder = 'Type email adress' \n                    onChange={(e) => setEmail(e.target.value)}\n                    onFocus = {(e) => error && dispatch(resetError())}\n                  />\n                </div>\n              </div>\n              <div className = { styles.group }>\n                <label>Password</label>\n                <div className='p-inputgroup'>\n                  <Password  \n                    ref = { passwordRef }\n                    className = { styles.input }\n                    value = { password }  placeholder = 'Password' \n                    onChange={(e) => setPassword(e.target.value)} \n                    onFocus = {(e) => error && dispatch(resetError())}\n                  />\n                </div>\n              </div>\n              <p className = { styles.error }>{ error }</p>\n              <Button \n                className = {styles.button} label = 'Sign Up' loading = {false}\n                onClick = { () => dispatch(onSignUp(email, password)) }\n              />\n              \n              <div className = { styles.links }>\n                <Link to = '/login'>\n                  <Button label = 'Log in' className = { styles.link + ' p-button-link' } />\n                </Link>\n                \n                \n              </div>\n          </div>\n      </div>\n    </div>\n    // <div className = { styles.wrapper + ' card' }>\n    //   <h1 className = 'icon-logo'></h1>\n    //   <h2>Log In</h2>\n    //   <div className = 'p-grid p-fluid'>\n    //       <div className = 'p-col-12 p-md-12'>\n    //           <div className = { styles.group }>\n    //             <label>Email</label>\n    //             <div className='p-inputgroup'>\n    //               <InputText \n    //                 ref = { emailRef }\n    //                 className = { styles.input } placeholder = 'Type email adress' \n    //                 onChange={(e) => setEmail(e.target.value)}\n    //                 onFocus = {(e) => error && dispatch(resetError())}\n    //               />\n    //             </div>\n    //           </div>\n    //           <div className = { styles.group }>\n    //             <label>Password</label>\n    //             <div className='p-inputgroup'>\n    //               <Password  \n    //                 ref = { passwordRef }\n    //                 className = { styles.input }\n    //                 value = { password }  placeholder = 'Password' \n    //                 onChange={(e) => setPassword(e.target.value)} \n    //                 onFocus = {(e) => error && dispatch(resetError())}\n    //               />\n    //             </div>\n    //           </div>\n    //           <p className = { styles.error }>{ error }</p>\n    //           <Button \n    //             className = {styles.button} label = 'Login' loading = {false}\n    //             onClick = { () => dispatch(onLogin(email, password)) }\n    //           />\n    //           <Button \n    //             className = {styles.button} label = 'Login with Google' loading = {false} icon = 'icon-google'\n    //             onClick = { () => {} }\n    //           />\n    //           <Button \n    //             className = {styles.button} label = 'Login with Facebook' loading = {false} icon = 'icon-facebook'\n    //             onClick = { () => {} }\n    //           />\n    //           <div className = { styles.links }>\n    //             <Link to = '/signup'>\n    //               <Button label = 'Sign Up' className = { styles.link + ' p-button-link' } />\n    //             </Link>\n    //             <Link to = '/reset'>\n    //               <Button label = 'Forget password' className = { styles.link + ' p-button-link' } />\n    //             </Link>\n                \n    //           </div>\n    //       </div>\n    //   </div>\n    // </div>\n    // </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  console.log('State', state)\n  return { }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup))","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/features/auth/Reset.tsx",["123","124","125"],"import React, { useState, useEffect, useRef } from 'react'\nimport { connect, useDispatch, useSelector  } from 'react-redux'\nimport { withRouter, Link  } from 'react-router-dom'\nimport { InputText }            from 'primereact/inputtext'\nimport { Button }               from 'primereact/button'\nimport { onResetPassword }      from '../../async/authActions'\nimport { resetError }           from './authSlice'\nimport styles from './Auth.module.scss'\n\nconst Reset = (): JSX.Element => {\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ message, setMesssage ] = useState('')\n  const error = useSelector((state: { auth: { error: string } }) => state.auth.error)\n  const emailRef = useRef(null)\n  const isResetedPassword = useSelector((state: { auth: {isResetedPassword: boolean} }) => state.auth.isResetedPassword)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (isResetedPassword) {\n      setMesssage('Hello People! Check your email! folow link.')\n    }\n  }, [ isResetedPassword ])\n\n  return (\n    <div className = { styles.wrapper + ' card' }>\n      <h1 className = 'icon-logo'></h1>\n      <h2>Reset Password</h2>\n      <div className = 'p-grid p-fluid'>\n        <div className = 'p-col-12 p-md-12'>\n          <div className = { styles.group }>\n            <label>Email</label>\n            <div className='p-inputgroup'>\n              <InputText \n                ref = { emailRef }\n                className = { styles.input } placeholder = 'Type email adress' \n                onChange={(e) => setEmail(e.target.value)}\n                onFocus = {(e) => error && dispatch(resetError())}\n              />\n            </div>\n          </div>\n          <p className = { styles.message }>{ message }</p>\n          <p className = { styles.error }>{ error }</p>\n          <Button \n            className = {styles.button} label = 'Login' loading = {false}\n            onClick = { () => dispatch(onResetPassword(email)) }\n          />\n          \n          <div className = { styles.links }>\n            <Link to = '/login'>\n              <Button label = 'Log In' className = { styles.link + ' p-button-link' } />\n            </Link>\n            <Link to = '/signup'>\n              <Button label = 'Sign Up' className = { styles.link + ' p-button-link' } />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: { auth: { isLogged: boolean } }) => {\n  return {\n    isLogged: state.auth.isLogged\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Reset))","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/dashboardSlice.ts",["126"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    libraries: <any[]>[]\n  },\n  reducers: {\n    getLibraries: (state, action: PayloadAction<any[]>) => {\n      state.libraries = action.payload\n    },\n  }\n})\n\nexport const { getLibraries } = dashboardSlice.actions\n\nexport default dashboardSlice.reducer","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/async/dashboardAction.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Dashboard/CarouselItem.tsx",["127","128","129"],"import React, { MouseEvent } from 'react'\nimport { ProgressBar, ProgressBarProps } from 'primereact/progressbar'\nimport { LibraryInterface } from '../../models/interfaces'\nimport styles               from './CarouselItem.module.scss'\n\nenum IconsUi {\n  RadialPlay = 'icon-play-radial',\n  RadialPause = 'icon-pause-radial'\n}\nconst onLoad = (element: HTMLElement | null | undefined): void => {\n  if (!element) return\n  element.style.opacity = '1'\n}\n\nconst onClickPlay = (element: HTMLElement, state: boolean): void => {\n  if (!element) return\n  element.className = state ? IconsUi.RadialPlay : IconsUi.RadialPause\n}\n\nconst CarouselItem = (library: LibraryInterface): JSX.Element => {\n  const { name, cover, description, data } = library\n  const progressBarProps: ProgressBarProps = {\n    value: 0\n  }\n  let playing = false\n  \n\n  return (\n    <article className = { styles.wrapper } style = {{ opacity: '0' }}>\n      <div className = { styles.imageWrapper }>\n        <img src = { cover } alt = 'cover_image' onLoad = {(e) => onLoad((e.target as HTMLImageElement).parentElement?.parentElement)}/>\n      </div>\n      <div className = { styles.footer }>\n        {/* <div className = {styles.title}>{ name }</div> */}\n        <div className = { styles.controls }>\n          <button>Launch</button>\n          {/* <Button label = 'Launch'/>*/\n          <i \n            className = { IconsUi.RadialPlay } \n            onClick = {(e: MouseEvent) => onClickPlay(e.target as HTMLElement, playing = !playing)}\n          /> }\n        </div>\n        <ProgressBar { ...progressBarProps } />\n        \n        {/* <p>{ description }</p> */}\n      </div>\n    </article>\n  )\n}\n\n\nexport default CarouselItem","/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/services/audio/audio.instance.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/services/audio/audio.service.ts",[],"/Users/dmitrysekhno/Documents/WorkingTrash/diforb-react-2/src/pages/Player/index.tsx",["130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":32,"nodeType":"137","messageId":"138","endLine":2,"endColumn":43},{"ruleId":"135","severity":1,"message":"139","line":10,"column":31,"nodeType":"137","messageId":"138","endLine":10,"endColumn":49},{"ruleId":"140","severity":1,"message":"141","line":32,"column":6,"nodeType":"142","endLine":32,"endColumn":8,"suggestions":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"133","replacedBy":"145"},{"ruleId":"140","severity":1,"message":"146","line":20,"column":6,"nodeType":"142","endLine":20,"endColumn":18,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":17},{"ruleId":"135","severity":1,"message":"149","line":3,"column":19,"nodeType":"137","messageId":"138","endLine":3,"endColumn":30},{"ruleId":"135","severity":1,"message":"150","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"146","line":22,"column":6,"nodeType":"142","endLine":22,"endColumn":18,"suggestions":"151"},{"ruleId":"135","severity":1,"message":"152","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":23},{"ruleId":"135","severity":1,"message":"153","line":29,"column":13,"nodeType":"137","messageId":"138","endLine":29,"endColumn":22},{"ruleId":"135","severity":1,"message":"139","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":23,"column":7,"nodeType":"156","endLine":23,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":63,"column":6,"nodeType":"142","endLine":63,"endColumn":8,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"155","line":21,"column":7,"nodeType":"156","endLine":21,"endColumn":35},{"ruleId":"135","severity":1,"message":"158","line":12,"column":11,"nodeType":"137","messageId":"138","endLine":12,"endColumn":19},{"ruleId":"135","severity":1,"message":"159","line":12,"column":21,"nodeType":"137","messageId":"138","endLine":12,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":27,"column":7,"nodeType":"156","endLine":27,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":7,"column":16,"nodeType":"162","messageId":"163","endLine":7,"endColumn":25},{"ruleId":"135","severity":1,"message":"164","line":21,"column":11,"nodeType":"137","messageId":"138","endLine":21,"endColumn":15},{"ruleId":"135","severity":1,"message":"165","line":21,"column":24,"nodeType":"137","messageId":"138","endLine":21,"endColumn":35},{"ruleId":"135","severity":1,"message":"166","line":21,"column":37,"nodeType":"137","messageId":"138","endLine":21,"endColumn":41},{"ruleId":"135","severity":1,"message":"167","line":6,"column":7,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'getFirebaseBackend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],["168"],["169"],"React Hook useEffect has missing dependencies: 'firebaseBackend' and 'history'. Either include them or remove the dependency array.",["171"],"'connect' is defined but never used.","'useDispatch' is defined but never used.","'onLogout' is defined but never used.",["172"],"'UserInterface' is defined but never used.","'firestore' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["173"],"'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any[]' instead of '<any[]>'.","TSTypeAssertion","as","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'data' is assigned a value but never used.","'rever1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"174","fix":"179"},"Update the dependencies array to be: [dispatch]",{"range":"180","text":"181"},"Update the dependencies array to be: [firebaseBackend, history, isLogged]",{"range":"182","text":"183"},{"range":"184","text":"183"},{"range":"185","text":"181"},[1151,1153],"[dispatch]",[711,723],"[firebaseBackend, history, isLogged]",[768,780],[1941,1943]]